/*
 * watch_functions.c
 *
 *  Created on: Nov 11, 2021
 *      Author: gurk
 */


#include <stdio.h>
#include "xparameters.h"
#include "xgpio.h"
#include "xtmrctr.h"
#include "xscugic.h"
#include "xil_exception.h"
#include "xil_printf.h"
#include "xtime_l.h"
#include <unistd.h>
#include "watch_functions.h"


int hour10 = 2, hour1 = 3, min10 = 5, min1 = 9, sec10 = 4, sec1 = 0;

char *colon[9];
char *number0[9];
char *number1[9];
char *number2[9];
char *number3[9];
char *number4[9];
char *number5[9];
char *number6[9];
char *number7[9];
char *number8[9];
char *number9[9];

void setAsciiNumbers(){
	colon[0] = "   ";
	colon[1] = "   ";
	colon[2] = "   ";
	colon[3] = " O ";
	colon[4] = "   ";
	colon[5] = " O ";
	colon[6] = "   ";
	colon[7] = "   ";
	colon[8] = "   ";

	//char *number0[9];

	number0[0]= "OOOOOOOOO";
	number0[1] ="O       O";
	number0[2] ="O       O";
	number0[3] ="O       O";
	number0[4] ="O       O";
	number0[5] ="O       O";
	number0[6] ="O       O";
	number0[7] ="O       O";
	number0[8] ="OOOOOOOOO";

	//char *number1[9];

	number1[0]= "        O";
	number1[1]= "        O";
	number1[2]= "        O";
	number1[3]= "        O";
	number1[4]= "        O";
	number1[5]= "        O";
	number1[6]= "        O";
	number1[7]= "        O";
	number1[8]= "        O";

	//char *number2[9];

	number2[0]= "OOOOOOOOO";
	number2[1]= "        O";
	number2[2]= "        O";
	number2[3]= "        O";
	number2[4]= "OOOOOOOOO";
	number2[5]= "O        ";
	number2[6]= "O        ";
	number2[7]= "O        ";
	number2[8]= "OOOOOOOOO";

	//char *number3[9];

	number3[0]= "OOOOOOOOO";
	number3[1]= "        O";
	number3[2]= "        O";
	number3[3]= "        O";
	number3[4]= "OOOOOOOOO";
	number3[5]= "        O";
	number3[6]= "        O";
	number3[7]= "        O";
	number3[8]= "OOOOOOOOO";

	//char *number4[9];

	number4[0]=  "O       O";
	number4[1]= "O       O";
	number4[2]= "O       O";
	number4[3]= "O       O";
	number4[4]= "OOOOOOOOO";
	number4[5]= "        O";
	number4[6]= "        O";
	number4[7]= "        O";
	number4[8]= "        O";

	//char *number5[9];

	number5[0]= "OOOOOOOOO";
	number5[1]= "O        ";
	number5[2]= "O        ";
	number5[3]= "O        ";
	number5[4]= "OOOOOOOOO";
	number5[5]= "        O";
	number5[6]= "        O";
	number5[7]= "        O";
	number5[8]= "OOOOOOOOO";

	//char *number6[9];

	number6[0]= "OOOOOOOOO";
	number6[1]= "O        ";
	number6[2]= "O        ";
	number6[3]= "O        ";
	number6[4]= "OOOOOOOOO";
	number6[5]= "O       O";
	number6[6]= "O       O";
	number6[7]= "O       O";
	number6[8]= "OOOOOOOOO";

	//char *number7[9];

	number7[0]= "OOOOOOOOO";
	number7[1]= "        O";
	number7[2]= "        O";
	number7[3]= "        O";
	number7[4]= "        O";
	number7[5]= "        O";
	number7[6]= "        O";
	number7[7]= "        O";
	number7[8]= "        O";

	//char *number8[9];

	number8[0]= "OOOOOOOOO";
	number8[1]= "O       O";
	number8[2]= "O       O";
	number8[3]= "O       O";
	number8[4]= "OOOOOOOOO";
	number8[5]= "O       O";
	number8[6]= "O       O";
	number8[7]= "O       O";
	number8[8]= "OOOOOOOOO";

	//char *number9[9];

	number9[0]= "OOOOOOOOO";
	number9[1]= "O       O";
	number9[2]= "O       O";
	number9[3]= "O       O";
	number9[4]= "OOOOOOOOO";
	number9[5]= "        O";
	number9[6]= "        O";
	number9[7]= "        O";
	number9[8]= "OOOOOOOOO";
}

int displayNumber(int sec1){

	if (sec1 > 9) {
		sec10++;
		sec1 = 0;
		}
	if (sec10 > 5) {
		min1++;
		sec10 = 0;
		}
	if (min1 > 9) {
		min10++;
		min1 = 0;
	}
	if (min10 > 5) {
		hour1++;
		min10 = 0;
	}
	if (hour1 > 9) {
		hour10++;
		hour1 = 0;
	}
	if (hour10 > 1 && hour1 > 3) {
		hour1 = 0;
		hour10 = 0;
	}


	for (int i = 0; i < 9; i++) {

	switch(hour10) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		}

			xil_printf(" ");

		switch (hour1) {
			case 0:
				xil_printf("%s", number0[i]);
				break;
		case 1:
				xil_printf("%s", number1[i]);
				break;
		case 2:
				xil_printf("%s", number2[i]);
				break;
		case 3:
				xil_printf("%s", number3[i]);
				break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		case 7:
			xil_printf("%s", number7[i]);
			break;
		case 8:
			xil_printf("%s", number8[i]);
			break;
		case 9:
			xil_printf("%s", number9[i]);
			break;
		}

		xil_printf(colon[i]);

		switch (min10) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		case 3:
			xil_printf("%s", number3[i]);
			break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		}

		xil_printf(" ");

		switch (min1) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		case 3:
			xil_printf("%s", number3[i]);
			break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		case 7:
			xil_printf("%s", number7[i]);
			break;
		case 8:
			xil_printf("%s", number8[i]);
			break;
		case 9:
			xil_printf("%s", number9[i]);
			break;
		}

		xil_printf(colon[i]);

		switch (sec10) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		case 3:
			xil_printf("%s", number3[i]);
			break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		}

		xil_printf(" ");

		switch (sec1) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		case 3:
			xil_printf("%s", number3[i]);
			break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		case 7:
			xil_printf("%s", number7[i]);
			break;
		case 8:
			xil_printf("%s", number8[i]);
			break;
		case 9:
			xil_printf("%s", number9[i]);
			break;
		}

		xil_printf("\n\r");

	}

	xil_printf("\n\n\n\n\n\n\n\n\n\n\n\n");
	return sec1;
}

void displayAlarm(int alarmHour10, int alarmHour1, int alarmMinute10, int alarmMinute1){

	for (int i = 0; i < 9; i++) {

	switch(alarmHour10) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		}

			xil_printf(" ");

		switch (alarmHour1) {
			case 0:
				xil_printf("%s", number0[i]);
				break;
		case 1:
				xil_printf("%s", number1[i]);
				break;
		case 2:
				xil_printf("%s", number2[i]);
				break;
		case 3:
				xil_printf("%s", number3[i]);
				break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		case 7:
			xil_printf("%s", number7[i]);
			break;
		case 8:
			xil_printf("%s", number8[i]);
			break;
		case 9:
			xil_printf("%s", number9[i]);
			break;
		}

		xil_printf(colon[i]);

		switch (alarmMinute10) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		case 3:
			xil_printf("%s", number3[i]);
			break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		}

		xil_printf(" ");

		switch (alarmMinute1) {
		case 0:
			xil_printf("%s", number0[i]);
			break;
		case 1:
			xil_printf("%s", number1[i]);
			break;
		case 2:
			xil_printf("%s", number2[i]);
			break;
		case 3:
			xil_printf("%s", number3[i]);
			break;
		case 4:
			xil_printf("%s", number4[i]);
			break;
		case 5:
			xil_printf("%s", number5[i]);
			break;
		case 6:
			xil_printf("%s", number6[i]);
			break;
		case 7:
			xil_printf("%s", number7[i]);
			break;
		case 8:
			xil_printf("%s", number8[i]);
			break;
		case 9:
			xil_printf("%s", number9[i]);
			break;
		}



		xil_printf("\n\r");

	}

	xil_printf("\n\n\n\n\n\n\n\n\n\n\n\n");
}
